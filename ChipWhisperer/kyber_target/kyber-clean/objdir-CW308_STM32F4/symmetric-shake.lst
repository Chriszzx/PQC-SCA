   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"symmetric-shake.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.PQCLEAN_KYBER512_CLEAN_kyber_shake128_absorb,"ax",%progbits
  16              		.align	1
  17              		.global	PQCLEAN_KYBER512_CLEAN_kyber_shake128_absorb
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	PQCLEAN_KYBER512_CLEAN_kyber_shake128_absorb:
  25              	.LFB0:
  26              		.file 1 "symmetric-shake.c"
   1:symmetric-shake.c **** #include "fips202.h"
   2:symmetric-shake.c **** #include "params.h"
   3:symmetric-shake.c **** #include "symmetric.h"
   4:symmetric-shake.c **** #include <stddef.h>
   5:symmetric-shake.c **** #include <stdint.h>
   6:symmetric-shake.c **** #include <string.h>
   7:symmetric-shake.c **** 
   8:symmetric-shake.c **** /*************************************************
   9:symmetric-shake.c **** * Name:        PQCLEAN_KYBER512_CLEAN_kyber_shake128_absorb
  10:symmetric-shake.c **** *
  11:symmetric-shake.c **** * Description: Absorb step of the SHAKE128 specialized for the Kyber context.
  12:symmetric-shake.c **** *
  13:symmetric-shake.c **** * Arguments:   - xof_state *state: pointer to (uninitialized) output Keccak state
  14:symmetric-shake.c **** *              - const uint8_t *seed: pointer to KYBER_SYMBYTES input to be absorbed into state
  15:symmetric-shake.c **** *              - uint8_t i: additional byte of input
  16:symmetric-shake.c **** *              - uint8_t j: additional byte of input
  17:symmetric-shake.c **** **************************************************/
  18:symmetric-shake.c **** void PQCLEAN_KYBER512_CLEAN_kyber_shake128_absorb(xof_state *state,
  19:symmetric-shake.c ****         const uint8_t seed[KYBER_SYMBYTES],
  20:symmetric-shake.c ****         uint8_t x,
  21:symmetric-shake.c ****         uint8_t y) {
  27              		.loc 1 21 20
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 56
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 8EB0     		sub	sp, sp, #56
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 64
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 F860     		str	r0, [r7, #12]
  43 0008 B960     		str	r1, [r7, #8]
  44 000a 1146     		mov	r1, r2
  45 000c 1A46     		mov	r2, r3
  46 000e 0B46     		mov	r3, r1
  47 0010 FB71     		strb	r3, [r7, #7]
  48 0012 1346     		mov	r3, r2
  49 0014 BB71     		strb	r3, [r7, #6]
  22:symmetric-shake.c ****     uint8_t extseed[KYBER_SYMBYTES + 2];
  23:symmetric-shake.c **** 
  24:symmetric-shake.c ****     memcpy(extseed, seed, KYBER_SYMBYTES);
  50              		.loc 1 24 5
  51 0016 07F11403 		add	r3, r7, #20
  52 001a 2022     		movs	r2, #32
  53 001c B968     		ldr	r1, [r7, #8]
  54 001e 1846     		mov	r0, r3
  55 0020 FFF7FEFF 		bl	memcpy
  25:symmetric-shake.c ****     extseed[KYBER_SYMBYTES + 0] = x;
  56              		.loc 1 25 33
  57 0024 FB79     		ldrb	r3, [r7, #7]
  58 0026 87F83430 		strb	r3, [r7, #52]
  26:symmetric-shake.c ****     extseed[KYBER_SYMBYTES + 1] = y;
  59              		.loc 1 26 33
  60 002a BB79     		ldrb	r3, [r7, #6]
  61 002c 87F83530 		strb	r3, [r7, #53]
  27:symmetric-shake.c **** 
  28:symmetric-shake.c ****     shake128_absorb(state, extseed, sizeof(extseed));
  62              		.loc 1 28 5
  63 0030 07F11403 		add	r3, r7, #20
  64 0034 2222     		movs	r2, #34
  65 0036 1946     		mov	r1, r3
  66 0038 F868     		ldr	r0, [r7, #12]
  67 003a FFF7FEFF 		bl	shake128_absorb
  29:symmetric-shake.c **** }
  68              		.loc 1 29 1
  69 003e 00BF     		nop
  70 0040 3837     		adds	r7, r7, #56
  71              	.LCFI3:
  72              		.cfi_def_cfa_offset 8
  73 0042 BD46     		mov	sp, r7
  74              	.LCFI4:
  75              		.cfi_def_cfa_register 13
  76              		@ sp needed
  77 0044 80BD     		pop	{r7, pc}
  78              		.cfi_endproc
  79              	.LFE0:
  81              		.section	.text.PQCLEAN_KYBER512_CLEAN_kyber_shake256_prf,"ax",%progbits
  82              		.align	1
  83              		.global	PQCLEAN_KYBER512_CLEAN_kyber_shake256_prf
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu softvfp
  89              	PQCLEAN_KYBER512_CLEAN_kyber_shake256_prf:
  90              	.LFB1:
  30:symmetric-shake.c **** 
  31:symmetric-shake.c **** /*************************************************
  32:symmetric-shake.c **** * Name:        PQCLEAN_KYBER512_CLEAN_kyber_shake256_prf
  33:symmetric-shake.c **** *
  34:symmetric-shake.c **** * Description: Usage of SHAKE256 as a PRF, concatenates secret and public input
  35:symmetric-shake.c **** *              and then generates outlen bytes of SHAKE256 output
  36:symmetric-shake.c **** *
  37:symmetric-shake.c **** * Arguments:   - uint8_t *out: pointer to output
  38:symmetric-shake.c **** *              - size_t outlen: number of requested output bytes
  39:symmetric-shake.c **** *              - const uint8_t *key: pointer to the key (of length KYBER_SYMBYTES)
  40:symmetric-shake.c **** *              - uint8_t nonce: single-byte nonce (public PRF input)
  41:symmetric-shake.c **** **************************************************/
  42:symmetric-shake.c **** void PQCLEAN_KYBER512_CLEAN_kyber_shake256_prf(uint8_t *out, size_t outlen, const uint8_t key[KYBER
  91              		.loc 1 42 127
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 56
  94              		@ frame_needed = 1, uses_anonymous_args = 0
  95 0000 80B5     		push	{r7, lr}
  96              	.LCFI5:
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 7, -8
  99              		.cfi_offset 14, -4
 100 0002 8EB0     		sub	sp, sp, #56
 101              	.LCFI6:
 102              		.cfi_def_cfa_offset 64
 103 0004 00AF     		add	r7, sp, #0
 104              	.LCFI7:
 105              		.cfi_def_cfa_register 7
 106 0006 F860     		str	r0, [r7, #12]
 107 0008 B960     		str	r1, [r7, #8]
 108 000a 7A60     		str	r2, [r7, #4]
 109 000c FB70     		strb	r3, [r7, #3]
  43:symmetric-shake.c ****     uint8_t extkey[KYBER_SYMBYTES + 1];
  44:symmetric-shake.c **** 
  45:symmetric-shake.c ****     memcpy(extkey, key, KYBER_SYMBYTES);
 110              		.loc 1 45 5
 111 000e 07F11403 		add	r3, r7, #20
 112 0012 2022     		movs	r2, #32
 113 0014 7968     		ldr	r1, [r7, #4]
 114 0016 1846     		mov	r0, r3
 115 0018 FFF7FEFF 		bl	memcpy
  46:symmetric-shake.c ****     extkey[KYBER_SYMBYTES] = nonce;
 116              		.loc 1 46 28
 117 001c FB78     		ldrb	r3, [r7, #3]
 118 001e 87F83430 		strb	r3, [r7, #52]
  47:symmetric-shake.c **** 
  48:symmetric-shake.c ****     shake256(out, outlen, extkey, sizeof(extkey));
 119              		.loc 1 48 5
 120 0022 07F11402 		add	r2, r7, #20
 121 0026 2123     		movs	r3, #33
 122 0028 B968     		ldr	r1, [r7, #8]
 123 002a F868     		ldr	r0, [r7, #12]
 124 002c FFF7FEFF 		bl	shake256
  49:symmetric-shake.c **** }
 125              		.loc 1 49 1
 126 0030 00BF     		nop
 127 0032 3837     		adds	r7, r7, #56
 128              	.LCFI8:
 129              		.cfi_def_cfa_offset 8
 130 0034 BD46     		mov	sp, r7
 131              	.LCFI9:
 132              		.cfi_def_cfa_register 13
 133              		@ sp needed
 134 0036 80BD     		pop	{r7, pc}
 135              		.cfi_endproc
 136              	.LFE1:
 138              		.section	.text.PQCLEAN_KYBER512_CLEAN_kyber_shake256_rkprf,"ax",%progbits
 139              		.align	1
 140              		.global	PQCLEAN_KYBER512_CLEAN_kyber_shake256_rkprf
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 144              		.fpu softvfp
 146              	PQCLEAN_KYBER512_CLEAN_kyber_shake256_rkprf:
 147              	.LFB2:
  50:symmetric-shake.c **** 
  51:symmetric-shake.c **** /*************************************************
  52:symmetric-shake.c **** * Name:        PQCLEAN_KYBER512_CLEAN_kyber_shake256_prf
  53:symmetric-shake.c **** *
  54:symmetric-shake.c **** * Description: Usage of SHAKE256 as a PRF, concatenates secret and public input
  55:symmetric-shake.c **** *              and then generates outlen bytes of SHAKE256 output
  56:symmetric-shake.c **** *
  57:symmetric-shake.c **** * Arguments:   - uint8_t *out: pointer to output
  58:symmetric-shake.c **** *              - size_t outlen: number of requested output bytes
  59:symmetric-shake.c **** *              - const uint8_t *key: pointer to the key (of length KYBER_SYMBYTES)
  60:symmetric-shake.c **** *              - uint8_t nonce: single-byte nonce (public PRF input)
  61:symmetric-shake.c **** **************************************************/
  62:symmetric-shake.c **** void PQCLEAN_KYBER512_CLEAN_kyber_shake256_rkprf(uint8_t out[KYBER_SSBYTES], const uint8_t key[KYBE
 148              		.loc 1 62 157
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 24
 151              		@ frame_needed = 1, uses_anonymous_args = 0
 152 0000 80B5     		push	{r7, lr}
 153              	.LCFI10:
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 7, -8
 156              		.cfi_offset 14, -4
 157 0002 86B0     		sub	sp, sp, #24
 158              	.LCFI11:
 159              		.cfi_def_cfa_offset 32
 160 0004 00AF     		add	r7, sp, #0
 161              	.LCFI12:
 162              		.cfi_def_cfa_register 7
 163 0006 F860     		str	r0, [r7, #12]
 164 0008 B960     		str	r1, [r7, #8]
 165 000a 7A60     		str	r2, [r7, #4]
  63:symmetric-shake.c ****     shake256incctx s;
  64:symmetric-shake.c **** 
  65:symmetric-shake.c ****     shake256_inc_init(&s);
 166              		.loc 1 65 5
 167 000c 07F11403 		add	r3, r7, #20
 168 0010 1846     		mov	r0, r3
 169 0012 FFF7FEFF 		bl	shake256_inc_init
  66:symmetric-shake.c ****     shake256_inc_absorb(&s, key, KYBER_SYMBYTES);
 170              		.loc 1 66 5
 171 0016 07F11403 		add	r3, r7, #20
 172 001a 2022     		movs	r2, #32
 173 001c B968     		ldr	r1, [r7, #8]
 174 001e 1846     		mov	r0, r3
 175 0020 FFF7FEFF 		bl	shake256_inc_absorb
  67:symmetric-shake.c ****     shake256_inc_absorb(&s, input, KYBER_CIPHERTEXTBYTES);
 176              		.loc 1 67 5
 177 0024 07F11403 		add	r3, r7, #20
 178 0028 4FF44072 		mov	r2, #768
 179 002c 7968     		ldr	r1, [r7, #4]
 180 002e 1846     		mov	r0, r3
 181 0030 FFF7FEFF 		bl	shake256_inc_absorb
  68:symmetric-shake.c ****     shake256_inc_finalize(&s);
 182              		.loc 1 68 5
 183 0034 07F11403 		add	r3, r7, #20
 184 0038 1846     		mov	r0, r3
 185 003a FFF7FEFF 		bl	shake256_inc_finalize
  69:symmetric-shake.c ****     shake256_inc_squeeze(out, KYBER_SSBYTES, &s);
 186              		.loc 1 69 5
 187 003e 07F11403 		add	r3, r7, #20
 188 0042 1A46     		mov	r2, r3
 189 0044 2021     		movs	r1, #32
 190 0046 F868     		ldr	r0, [r7, #12]
 191 0048 FFF7FEFF 		bl	shake256_inc_squeeze
  70:symmetric-shake.c ****     shake256_inc_ctx_release(&s);
 192              		.loc 1 70 5
 193 004c 07F11403 		add	r3, r7, #20
 194 0050 1846     		mov	r0, r3
 195 0052 FFF7FEFF 		bl	shake256_inc_ctx_release
  71:symmetric-shake.c **** }
 196              		.loc 1 71 1
 197 0056 00BF     		nop
 198 0058 1837     		adds	r7, r7, #24
 199              	.LCFI13:
 200              		.cfi_def_cfa_offset 8
 201 005a BD46     		mov	sp, r7
 202              	.LCFI14:
 203              		.cfi_def_cfa_register 13
 204              		@ sp needed
 205 005c 80BD     		pop	{r7, pc}
 206              		.cfi_endproc
 207              	.LFE2:
 209              		.text
 210              	.Letext0:
 211              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 212              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 213              		.file 4 "fips202.h"
 214              		.file 5 "symmetric.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 symmetric-shake.c
     /tmp/ccPpioau.s:16     .text.PQCLEAN_KYBER512_CLEAN_kyber_shake128_absorb:0000000000000000 $t
     /tmp/ccPpioau.s:24     .text.PQCLEAN_KYBER512_CLEAN_kyber_shake128_absorb:0000000000000000 PQCLEAN_KYBER512_CLEAN_kyber_shake128_absorb
     /tmp/ccPpioau.s:82     .text.PQCLEAN_KYBER512_CLEAN_kyber_shake256_prf:0000000000000000 $t
     /tmp/ccPpioau.s:89     .text.PQCLEAN_KYBER512_CLEAN_kyber_shake256_prf:0000000000000000 PQCLEAN_KYBER512_CLEAN_kyber_shake256_prf
     /tmp/ccPpioau.s:139    .text.PQCLEAN_KYBER512_CLEAN_kyber_shake256_rkprf:0000000000000000 $t
     /tmp/ccPpioau.s:146    .text.PQCLEAN_KYBER512_CLEAN_kyber_shake256_rkprf:0000000000000000 PQCLEAN_KYBER512_CLEAN_kyber_shake256_rkprf

UNDEFINED SYMBOLS
memcpy
shake128_absorb
shake256
shake256_inc_init
shake256_inc_absorb
shake256_inc_finalize
shake256_inc_squeeze
shake256_inc_ctx_release
