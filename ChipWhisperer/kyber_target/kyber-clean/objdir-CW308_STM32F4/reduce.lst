   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"reduce.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.PQCLEAN_KYBER512_CLEAN_montgomery_reduce,"ax",%progbits
  16              		.align	1
  17              		.global	PQCLEAN_KYBER512_CLEAN_montgomery_reduce
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	PQCLEAN_KYBER512_CLEAN_montgomery_reduce:
  25              	.LFB0:
  26              		.file 1 "reduce.c"
   1:reduce.c      **** #include "params.h"
   2:reduce.c      **** #include "reduce.h"
   3:reduce.c      **** #include <stdint.h>
   4:reduce.c      **** 
   5:reduce.c      **** /*************************************************
   6:reduce.c      **** * Name:        PQCLEAN_KYBER512_CLEAN_montgomery_reduce
   7:reduce.c      **** *
   8:reduce.c      **** * Description: Montgomery reduction; given a 32-bit integer a, computes
   9:reduce.c      **** *              16-bit integer congruent to a * R^-1 mod q, where R=2^16
  10:reduce.c      **** *
  11:reduce.c      **** * Arguments:   - int32_t a: input integer to be reduced;
  12:reduce.c      **** *                           has to be in {-q2^15,...,q2^15-1}
  13:reduce.c      **** *
  14:reduce.c      **** * Returns:     integer in {-q+1,...,q-1} congruent to a * R^-1 modulo q.
  15:reduce.c      **** **************************************************/
  16:reduce.c      **** int16_t PQCLEAN_KYBER512_CLEAN_montgomery_reduce(int32_t a) {
  27              		.loc 1 16 61
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 85B0     		sub	sp, sp, #20
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 24
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
  17:reduce.c      ****     int16_t t;
  18:reduce.c      **** 
  19:reduce.c      ****     t = (int16_t)a * QINV;
  43              		.loc 1 19 9
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 9BB2     		uxth	r3, r3
  46              		.loc 1 19 20
  47 000c 1A46     		mov	r2, r3	@ movhi
  48 000e 5200     		lsls	r2, r2, #1
  49 0010 1A44     		add	r2, r2, r3
  50 0012 1146     		mov	r1, r2	@ movhi
  51 0014 C800     		lsls	r0, r1, #3
  52 0016 1146     		mov	r1, r2	@ movhi
  53 0018 0246     		mov	r2, r0	@ movhi
  54 001a 0A44     		add	r2, r2, r1
  55 001c 1146     		mov	r1, r2	@ movhi
  56 001e C800     		lsls	r0, r1, #3
  57 0020 1146     		mov	r1, r2	@ movhi
  58 0022 0246     		mov	r2, r0	@ movhi
  59 0024 0A44     		add	r2, r2, r1
  60 0026 1202     		lsls	r2, r2, #8
  61 0028 1344     		add	r3, r3, r2
  62 002a 9BB2     		uxth	r3, r3
  63              		.loc 1 19 7
  64 002c FB81     		strh	r3, [r7, #14]	@ movhi
  20:reduce.c      ****     t = (a - (int32_t)t * KYBER_Q) >> 16;
  65              		.loc 1 20 14
  66 002e B7F90E30 		ldrsh	r3, [r7, #14]
  67              		.loc 1 20 25
  68 0032 6FF45062 		mvn	r2, #3328
  69 0036 03FB02F2 		mul	r2, r3, r2
  70              		.loc 1 20 12
  71 003a 7B68     		ldr	r3, [r7, #4]
  72 003c 1344     		add	r3, r3, r2
  73              		.loc 1 20 36
  74 003e 1B14     		asrs	r3, r3, #16
  75              		.loc 1 20 7
  76 0040 FB81     		strh	r3, [r7, #14]	@ movhi
  21:reduce.c      ****     return t;
  77              		.loc 1 21 12
  78 0042 B7F90E30 		ldrsh	r3, [r7, #14]
  22:reduce.c      **** }
  79              		.loc 1 22 1
  80 0046 1846     		mov	r0, r3
  81 0048 1437     		adds	r7, r7, #20
  82              	.LCFI3:
  83              		.cfi_def_cfa_offset 4
  84 004a BD46     		mov	sp, r7
  85              	.LCFI4:
  86              		.cfi_def_cfa_register 13
  87              		@ sp needed
  88 004c 80BC     		pop	{r7}
  89              	.LCFI5:
  90              		.cfi_restore 7
  91              		.cfi_def_cfa_offset 0
  92 004e 7047     		bx	lr
  93              		.cfi_endproc
  94              	.LFE0:
  96              		.section	.text.PQCLEAN_KYBER512_CLEAN_barrett_reduce,"ax",%progbits
  97              		.align	1
  98              		.global	PQCLEAN_KYBER512_CLEAN_barrett_reduce
  99              		.syntax unified
 100              		.thumb
 101              		.thumb_func
 102              		.fpu softvfp
 104              	PQCLEAN_KYBER512_CLEAN_barrett_reduce:
 105              	.LFB1:
  23:reduce.c      **** 
  24:reduce.c      **** /*************************************************
  25:reduce.c      **** * Name:        PQCLEAN_KYBER512_CLEAN_barrett_reduce
  26:reduce.c      **** *
  27:reduce.c      **** * Description: Barrett reduction; given a 16-bit integer a, computes
  28:reduce.c      **** *              centered representative congruent to a mod q in {-(q-1)/2,...,(q-1)/2}
  29:reduce.c      **** *
  30:reduce.c      **** * Arguments:   - int16_t a: input integer to be reduced
  31:reduce.c      **** *
  32:reduce.c      **** * Returns:     integer in {-(q-1)/2,...,(q-1)/2} congruent to a modulo q.
  33:reduce.c      **** **************************************************/
  34:reduce.c      **** int16_t PQCLEAN_KYBER512_CLEAN_barrett_reduce(int16_t a) {
 106              		.loc 1 34 58
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 16
 109              		@ frame_needed = 1, uses_anonymous_args = 0
 110              		@ link register save eliminated.
 111 0000 80B4     		push	{r7}
 112              	.LCFI6:
 113              		.cfi_def_cfa_offset 4
 114              		.cfi_offset 7, -4
 115 0002 85B0     		sub	sp, sp, #20
 116              	.LCFI7:
 117              		.cfi_def_cfa_offset 24
 118 0004 00AF     		add	r7, sp, #0
 119              	.LCFI8:
 120              		.cfi_def_cfa_register 7
 121 0006 0346     		mov	r3, r0
 122 0008 FB80     		strh	r3, [r7, #6]	@ movhi
  35:reduce.c      ****     int16_t t;
  36:reduce.c      ****     const int16_t v = ((1 << 26) + KYBER_Q / 2) / KYBER_Q;
 123              		.loc 1 36 19
 124 000a 44F6BF63 		movw	r3, #20159
 125 000e FB81     		strh	r3, [r7, #14]	@ movhi
  37:reduce.c      **** 
  38:reduce.c      ****     t  = ((int32_t)v * a + (1 << 25)) >> 26;
 126              		.loc 1 38 11
 127 0010 B7F90E30 		ldrsh	r3, [r7, #14]
 128              		.loc 1 38 22
 129 0014 B7F90620 		ldrsh	r2, [r7, #6]
 130 0018 02FB03F3 		mul	r3, r2, r3
 131              		.loc 1 38 26
 132 001c 03F10073 		add	r3, r3, #33554432
 133              		.loc 1 38 39
 134 0020 9B16     		asrs	r3, r3, #26
 135              		.loc 1 38 8
 136 0022 BB81     		strh	r3, [r7, #12]	@ movhi
  39:reduce.c      ****     t *= KYBER_Q;
 137              		.loc 1 39 7
 138 0024 BB89     		ldrh	r3, [r7, #12]
 139 0026 1A46     		mov	r2, r3	@ movhi
 140 0028 5200     		lsls	r2, r2, #1
 141 002a 1A44     		add	r2, r2, r3
 142 002c 9200     		lsls	r2, r2, #2
 143 002e 1A44     		add	r2, r2, r3
 144 0030 1202     		lsls	r2, r2, #8
 145 0032 1344     		add	r3, r3, r2
 146 0034 9BB2     		uxth	r3, r3
 147 0036 BB81     		strh	r3, [r7, #12]	@ movhi
  40:reduce.c      ****     return a - t;
 148              		.loc 1 40 14
 149 0038 FA88     		ldrh	r2, [r7, #6]
 150 003a BB89     		ldrh	r3, [r7, #12]
 151 003c D31A     		subs	r3, r2, r3
 152 003e 9BB2     		uxth	r3, r3
 153 0040 1BB2     		sxth	r3, r3
  41:reduce.c      **** }
 154              		.loc 1 41 1
 155 0042 1846     		mov	r0, r3
 156 0044 1437     		adds	r7, r7, #20
 157              	.LCFI9:
 158              		.cfi_def_cfa_offset 4
 159 0046 BD46     		mov	sp, r7
 160              	.LCFI10:
 161              		.cfi_def_cfa_register 13
 162              		@ sp needed
 163 0048 80BC     		pop	{r7}
 164              	.LCFI11:
 165              		.cfi_restore 7
 166              		.cfi_def_cfa_offset 0
 167 004a 7047     		bx	lr
 168              		.cfi_endproc
 169              	.LFE1:
 171              		.text
 172              	.Letext0:
 173              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 reduce.c
     /tmp/ccuffU5z.s:16     .text.PQCLEAN_KYBER512_CLEAN_montgomery_reduce:0000000000000000 $t
     /tmp/ccuffU5z.s:24     .text.PQCLEAN_KYBER512_CLEAN_montgomery_reduce:0000000000000000 PQCLEAN_KYBER512_CLEAN_montgomery_reduce
     /tmp/ccuffU5z.s:97     .text.PQCLEAN_KYBER512_CLEAN_barrett_reduce:0000000000000000 $t
     /tmp/ccuffU5z.s:104    .text.PQCLEAN_KYBER512_CLEAN_barrett_reduce:0000000000000000 PQCLEAN_KYBER512_CLEAN_barrett_reduce

NO UNDEFINED SYMBOLS
