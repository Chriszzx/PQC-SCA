   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"ntt.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.global	PQCLEAN_KYBER512_CLEAN_zetas
  16              		.section	.rodata
  17              		.align	2
  20              	PQCLEAN_KYBER512_CLEAN_zetas:
  21 0000 ECFB     		.short	-1044
  22 0002 0AFD     		.short	-758
  23 0004 99FE     		.short	-359
  24 0006 13FA     		.short	-1517
  25 0008 D505     		.short	1493
  26 000a 8E05     		.short	1422
  27 000c 1F01     		.short	287
  28 000e CA00     		.short	202
  29 0010 55FF     		.short	-171
  30 0012 6E02     		.short	622
  31 0014 2906     		.short	1577
  32 0016 B600     		.short	182
  33 0018 C203     		.short	962
  34 001a 4EFB     		.short	-1202
  35 001c 3EFA     		.short	-1474
  36 001e BC05     		.short	1468
  37 0020 3D02     		.short	573
  38 0022 D3FA     		.short	-1325
  39 0024 0801     		.short	264
  40 0026 7F01     		.short	383
  41 0028 C3FC     		.short	-829
  42 002a B205     		.short	1458
  43 002c BEF9     		.short	-1602
  44 002e 7EFF     		.short	-130
  45 0030 57FD     		.short	-681
  46 0032 F903     		.short	1017
  47 0034 DC02     		.short	732
  48 0036 6002     		.short	608
  49 0038 FAF9     		.short	-1542
  50 003a 9B01     		.short	411
  51 003c 33FF     		.short	-205
  52 003e DDF9     		.short	-1571
  53 0040 C704     		.short	1223
  54 0042 8C02     		.short	652
  55 0044 D8FD     		.short	-552
  56 0046 F703     		.short	1015
  57 0048 F3FA     		.short	-1293
  58 004a D305     		.short	1491
  59 004c E6FE     		.short	-282
  60 004e F8F9     		.short	-1544
  61 0050 0402     		.short	516
  62 0052 F8FF     		.short	-8
  63 0054 C0FE     		.short	-320
  64 0056 66FD     		.short	-666
  65 0058 AEF9     		.short	-1618
  66 005a 76FB     		.short	-1162
  67 005c 7E00     		.short	126
  68 005e BD05     		.short	1469
  69 0060 ABFC     		.short	-853
  70 0062 A6FF     		.short	-90
  71 0064 F1FE     		.short	-271
  72 0066 3E03     		.short	830
  73 0068 6B00     		.short	107
  74 006a 73FA     		.short	-1421
  75 006c 09FF     		.short	-247
  76 006e 49FC     		.short	-951
  77 0070 72FE     		.short	-398
  78 0072 C103     		.short	961
  79 0074 1CFA     		.short	-1508
  80 0076 2BFD     		.short	-725
  81 0078 C001     		.short	448
  82 007a D7FB     		.short	-1065
  83 007c A502     		.short	677
  84 007e 05FB     		.short	-1275
  85 0080 B1FB     		.short	-1103
  86 0082 AE01     		.short	430
  87 0084 2B02     		.short	555
  88 0086 4B03     		.short	843
  89 0088 1DFB     		.short	-1251
  90 008a 6703     		.short	871
  91 008c 0E06     		.short	1550
  92 008e 6900     		.short	105
  93 0090 A601     		.short	422
  94 0092 4B02     		.short	587
  95 0094 B100     		.short	177
  96 0096 15FF     		.short	-235
  97 0098 DDFE     		.short	-291
  98 009a 34FE     		.short	-460
  99 009c 2606     		.short	1574
 100 009e 7506     		.short	1653
 101 00a0 0AFF     		.short	-246
 102 00a2 0A03     		.short	778
 103 00a4 8704     		.short	1159
 104 00a6 6DFF     		.short	-147
 105 00a8 F7FC     		.short	-777
 106 00aa CB05     		.short	1483
 107 00ac A6FD     		.short	-602
 108 00ae 5F04     		.short	1119
 109 00b0 CAF9     		.short	-1590
 110 00b2 8402     		.short	644
 111 00b4 98FC     		.short	-872
 112 00b6 5D01     		.short	349
 113 00b8 A201     		.short	418
 114 00ba 4901     		.short	329
 115 00bc 64FF     		.short	-156
 116 00be B5FF     		.short	-75
 117 00c0 3103     		.short	817
 118 00c2 4904     		.short	1097
 119 00c4 5B02     		.short	603
 120 00c6 6202     		.short	610
 121 00c8 2A05     		.short	1322
 122 00ca FBFA     		.short	-1285
 123 00cc 47FA     		.short	-1465
 124 00ce 8001     		.short	384
 125 00d0 41FB     		.short	-1215
 126 00d2 78FF     		.short	-136
 127 00d4 C204     		.short	1218
 128 00d6 C9FA     		.short	-1335
 129 00d8 96FC     		.short	-874
 130 00da DC00     		.short	220
 131 00dc 5DFB     		.short	-1187
 132 00de 85F9     		.short	-1659
 133 00e0 5FFB     		.short	-1185
 134 00e2 06FA     		.short	-1530
 135 00e4 02FB     		.short	-1278
 136 00e6 1A03     		.short	794
 137 00e8 1AFA     		.short	-1510
 138 00ea AAFC     		.short	-854
 139 00ec 9AFC     		.short	-870
 140 00ee DE01     		.short	478
 141 00f0 94FF     		.short	-108
 142 00f2 CCFE     		.short	-308
 143 00f4 E403     		.short	996
 144 00f6 DF03     		.short	991
 145 00f8 BE03     		.short	958
 146 00fa 4CFA     		.short	-1460
 147 00fc F205     		.short	1522
 148 00fe 5C06     		.short	1628
 149              		.section	.text.fqmul,"ax",%progbits
 150              		.align	1
 151              		.arch armv7e-m
 152              		.syntax unified
 153              		.thumb
 154              		.thumb_func
 155              		.fpu softvfp
 157              	fqmul:
 158              	.LFB0:
 159              		.file 1 "ntt.c"
   1:ntt.c         **** #include "ntt.h"
   2:ntt.c         **** #include "params.h"
   3:ntt.c         **** #include "reduce.h"
   4:ntt.c         **** #include <stdint.h>
   5:ntt.c         **** 
   6:ntt.c         **** /* Code to generate PQCLEAN_KYBER512_CLEAN_zetas and zetas_inv used in the number-theoretic transfo
   7:ntt.c         **** 
   8:ntt.c         **** #define KYBER_ROOT_OF_UNITY 17
   9:ntt.c         **** 
  10:ntt.c         **** static const uint8_t tree[128] = {
  11:ntt.c         ****   0, 64, 32, 96, 16, 80, 48, 112, 8, 72, 40, 104, 24, 88, 56, 120,
  12:ntt.c         ****   4, 68, 36, 100, 20, 84, 52, 116, 12, 76, 44, 108, 28, 92, 60, 124,
  13:ntt.c         ****   2, 66, 34, 98, 18, 82, 50, 114, 10, 74, 42, 106, 26, 90, 58, 122,
  14:ntt.c         ****   6, 70, 38, 102, 22, 86, 54, 118, 14, 78, 46, 110, 30, 94, 62, 126,
  15:ntt.c         ****   1, 65, 33, 97, 17, 81, 49, 113, 9, 73, 41, 105, 25, 89, 57, 121,
  16:ntt.c         ****   5, 69, 37, 101, 21, 85, 53, 117, 13, 77, 45, 109, 29, 93, 61, 125,
  17:ntt.c         ****   3, 67, 35, 99, 19, 83, 51, 115, 11, 75, 43, 107, 27, 91, 59, 123,
  18:ntt.c         ****   7, 71, 39, 103, 23, 87, 55, 119, 15, 79, 47, 111, 31, 95, 63, 127
  19:ntt.c         **** };
  20:ntt.c         **** 
  21:ntt.c         **** void init_ntt() {
  22:ntt.c         ****   unsigned int i;
  23:ntt.c         ****   int16_t tmp[128];
  24:ntt.c         **** 
  25:ntt.c         ****   tmp[0] = MONT;
  26:ntt.c         ****   for(i=1;i<128;i++)
  27:ntt.c         ****     tmp[i] = fqmul(tmp[i-1],MONT*KYBER_ROOT_OF_UNITY % KYBER_Q);
  28:ntt.c         **** 
  29:ntt.c         ****   for(i=0;i<128;i++) {
  30:ntt.c         ****     PQCLEAN_KYBER512_CLEAN_zetas[i] = tmp[tree[i]];
  31:ntt.c         ****     if(PQCLEAN_KYBER512_CLEAN_zetas[i] > KYBER_Q/2)
  32:ntt.c         ****       PQCLEAN_KYBER512_CLEAN_zetas[i] -= KYBER_Q;
  33:ntt.c         ****     if(PQCLEAN_KYBER512_CLEAN_zetas[i] < -KYBER_Q/2)
  34:ntt.c         ****       PQCLEAN_KYBER512_CLEAN_zetas[i] += KYBER_Q;
  35:ntt.c         ****   }
  36:ntt.c         **** }
  37:ntt.c         **** */
  38:ntt.c         **** 
  39:ntt.c         **** const int16_t PQCLEAN_KYBER512_CLEAN_zetas[128] = {
  40:ntt.c         ****     -1044,  -758,  -359, -1517,  1493,  1422,   287,   202,
  41:ntt.c         ****     -171,   622,  1577,   182,   962, -1202, -1474,  1468,
  42:ntt.c         ****     573, -1325,   264,   383,  -829,  1458, -1602,  -130,
  43:ntt.c         ****     -681,  1017,   732,   608, -1542,   411,  -205, -1571,
  44:ntt.c         ****     1223,   652,  -552,  1015, -1293,  1491,  -282, -1544,
  45:ntt.c         ****     516,    -8,  -320,  -666, -1618, -1162,   126,  1469,
  46:ntt.c         ****     -853,   -90,  -271,   830,   107, -1421,  -247,  -951,
  47:ntt.c         ****     -398,   961, -1508,  -725,   448, -1065,   677, -1275,
  48:ntt.c         ****     -1103,   430,   555,   843, -1251,   871,  1550,   105,
  49:ntt.c         ****     422,   587,   177,  -235,  -291,  -460,  1574,  1653,
  50:ntt.c         ****     -246,   778,  1159,  -147,  -777,  1483,  -602,  1119,
  51:ntt.c         ****     -1590,   644,  -872,   349,   418,   329,  -156,   -75,
  52:ntt.c         ****     817,  1097,   603,   610,  1322, -1285, -1465,   384,
  53:ntt.c         ****     -1215,  -136,  1218, -1335,  -874,   220, -1187, -1659,
  54:ntt.c         ****     -1185, -1530, -1278,   794, -1510,  -854,  -870,   478,
  55:ntt.c         ****     -108,  -308,   996,   991,   958, -1460,  1522,  1628
  56:ntt.c         **** };
  57:ntt.c         **** 
  58:ntt.c         **** /*************************************************
  59:ntt.c         **** * Name:        fqmul
  60:ntt.c         **** *
  61:ntt.c         **** * Description: Multiplication followed by Montgomery reduction
  62:ntt.c         **** *
  63:ntt.c         **** * Arguments:   - int16_t a: first factor
  64:ntt.c         **** *              - int16_t b: second factor
  65:ntt.c         **** *
  66:ntt.c         **** * Returns 16-bit integer congruent to a*b*R^{-1} mod q
  67:ntt.c         **** **************************************************/
  68:ntt.c         **** static int16_t fqmul(int16_t a, int16_t b) {
 160              		.loc 1 68 44
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 8
 163              		@ frame_needed = 1, uses_anonymous_args = 0
 164 0000 80B5     		push	{r7, lr}
 165              	.LCFI0:
 166              		.cfi_def_cfa_offset 8
 167              		.cfi_offset 7, -8
 168              		.cfi_offset 14, -4
 169 0002 82B0     		sub	sp, sp, #8
 170              	.LCFI1:
 171              		.cfi_def_cfa_offset 16
 172 0004 00AF     		add	r7, sp, #0
 173              	.LCFI2:
 174              		.cfi_def_cfa_register 7
 175 0006 0346     		mov	r3, r0
 176 0008 0A46     		mov	r2, r1
 177 000a FB80     		strh	r3, [r7, #6]	@ movhi
 178 000c 1346     		mov	r3, r2	@ movhi
 179 000e BB80     		strh	r3, [r7, #4]	@ movhi
  69:ntt.c         ****     return PQCLEAN_KYBER512_CLEAN_montgomery_reduce((int32_t)a * b);
 180              		.loc 1 69 53
 181 0010 B7F90630 		ldrsh	r3, [r7, #6]
 182              		.loc 1 69 12
 183 0014 B7F90420 		ldrsh	r2, [r7, #4]
 184 0018 02FB03F3 		mul	r3, r2, r3
 185 001c 1846     		mov	r0, r3
 186 001e FFF7FEFF 		bl	PQCLEAN_KYBER512_CLEAN_montgomery_reduce
 187 0022 0346     		mov	r3, r0
  70:ntt.c         **** }
 188              		.loc 1 70 1
 189 0024 1846     		mov	r0, r3
 190 0026 0837     		adds	r7, r7, #8
 191              	.LCFI3:
 192              		.cfi_def_cfa_offset 8
 193 0028 BD46     		mov	sp, r7
 194              	.LCFI4:
 195              		.cfi_def_cfa_register 13
 196              		@ sp needed
 197 002a 80BD     		pop	{r7, pc}
 198              		.cfi_endproc
 199              	.LFE0:
 201              		.section	.text.PQCLEAN_KYBER512_CLEAN_ntt,"ax",%progbits
 202              		.align	1
 203              		.global	PQCLEAN_KYBER512_CLEAN_ntt
 204              		.syntax unified
 205              		.thumb
 206              		.thumb_func
 207              		.fpu softvfp
 209              	PQCLEAN_KYBER512_CLEAN_ntt:
 210              	.LFB1:
  71:ntt.c         **** 
  72:ntt.c         **** /*************************************************
  73:ntt.c         **** * Name:        PQCLEAN_KYBER512_CLEAN_ntt
  74:ntt.c         **** *
  75:ntt.c         **** * Description: Inplace number-theoretic transform (NTT) in Rq.
  76:ntt.c         **** *              input is in standard order, output is in bitreversed order
  77:ntt.c         **** *
  78:ntt.c         **** * Arguments:   - int16_t r[256]: pointer to input/output vector of elements of Zq
  79:ntt.c         **** **************************************************/
  80:ntt.c         **** void PQCLEAN_KYBER512_CLEAN_ntt(int16_t r[256]) {
 211              		.loc 1 80 49
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 32
 214              		@ frame_needed = 1, uses_anonymous_args = 0
 215 0000 80B5     		push	{r7, lr}
 216              	.LCFI5:
 217              		.cfi_def_cfa_offset 8
 218              		.cfi_offset 7, -8
 219              		.cfi_offset 14, -4
 220 0002 88B0     		sub	sp, sp, #32
 221              	.LCFI6:
 222              		.cfi_def_cfa_offset 40
 223 0004 00AF     		add	r7, sp, #0
 224              	.LCFI7:
 225              		.cfi_def_cfa_register 7
 226 0006 7860     		str	r0, [r7, #4]
  81:ntt.c         ****     unsigned int len, start, j, k;
  82:ntt.c         ****     int16_t t, zeta;
  83:ntt.c         **** 
  84:ntt.c         ****     k = 1;
 227              		.loc 1 84 7
 228 0008 0123     		movs	r3, #1
 229 000a 3B61     		str	r3, [r7, #16]
  85:ntt.c         ****     for (len = 128; len >= 2; len >>= 1) {
 230              		.loc 1 85 14
 231 000c 8023     		movs	r3, #128
 232 000e FB61     		str	r3, [r7, #28]
 233              		.loc 1 85 5
 234 0010 51E0     		b	.L4
 235              	.L9:
  86:ntt.c         ****         for (start = 0; start < 256; start = j + len) {
 236              		.loc 1 86 20
 237 0012 0023     		movs	r3, #0
 238 0014 BB61     		str	r3, [r7, #24]
 239              		.loc 1 86 9
 240 0016 48E0     		b	.L5
 241              	.L8:
  87:ntt.c         ****             zeta = PQCLEAN_KYBER512_CLEAN_zetas[k++];
 242              		.loc 1 87 50
 243 0018 3B69     		ldr	r3, [r7, #16]
 244 001a 5A1C     		adds	r2, r3, #1
 245 001c 3A61     		str	r2, [r7, #16]
 246              		.loc 1 87 18
 247 001e 2A4A     		ldr	r2, .L10
 248 0020 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 249 0024 FB81     		strh	r3, [r7, #14]	@ movhi
  88:ntt.c         ****             for (j = start; j < start + len; j++) {
 250              		.loc 1 88 20
 251 0026 BB69     		ldr	r3, [r7, #24]
 252 0028 7B61     		str	r3, [r7, #20]
 253              		.loc 1 88 13
 254 002a 34E0     		b	.L6
 255              	.L7:
  89:ntt.c         ****                 t = fqmul(zeta, r[j + len]);
 256              		.loc 1 89 37 discriminator 3
 257 002c 7A69     		ldr	r2, [r7, #20]
 258 002e FB69     		ldr	r3, [r7, #28]
 259 0030 1344     		add	r3, r3, r2
 260              		.loc 1 89 34 discriminator 3
 261 0032 5B00     		lsls	r3, r3, #1
 262 0034 7A68     		ldr	r2, [r7, #4]
 263 0036 1344     		add	r3, r3, r2
 264              		.loc 1 89 21 discriminator 3
 265 0038 B3F90020 		ldrsh	r2, [r3]
 266 003c B7F90E30 		ldrsh	r3, [r7, #14]
 267 0040 1146     		mov	r1, r2
 268 0042 1846     		mov	r0, r3
 269 0044 FFF7FEFF 		bl	fqmul
 270 0048 0346     		mov	r3, r0
 271 004a BB81     		strh	r3, [r7, #12]	@ movhi
  90:ntt.c         ****                 r[j + len] = r[j] - t;
 272              		.loc 1 90 31 discriminator 3
 273 004c 7B69     		ldr	r3, [r7, #20]
 274 004e 5B00     		lsls	r3, r3, #1
 275 0050 7A68     		ldr	r2, [r7, #4]
 276 0052 1344     		add	r3, r3, r2
 277 0054 B3F90030 		ldrsh	r3, [r3]
 278 0058 9AB2     		uxth	r2, r3
 279              		.loc 1 90 35 discriminator 3
 280 005a BB89     		ldrh	r3, [r7, #12]
 281 005c D31A     		subs	r3, r2, r3
 282 005e 99B2     		uxth	r1, r3
 283              		.loc 1 90 21 discriminator 3
 284 0060 7A69     		ldr	r2, [r7, #20]
 285 0062 FB69     		ldr	r3, [r7, #28]
 286 0064 1344     		add	r3, r3, r2
 287              		.loc 1 90 18 discriminator 3
 288 0066 5B00     		lsls	r3, r3, #1
 289 0068 7A68     		ldr	r2, [r7, #4]
 290 006a 1344     		add	r3, r3, r2
 291              		.loc 1 90 35 discriminator 3
 292 006c 0AB2     		sxth	r2, r1
 293              		.loc 1 90 28 discriminator 3
 294 006e 1A80     		strh	r2, [r3]	@ movhi
  91:ntt.c         ****                 r[j] = r[j] + t;
 295              		.loc 1 91 25 discriminator 3
 296 0070 7B69     		ldr	r3, [r7, #20]
 297 0072 5B00     		lsls	r3, r3, #1
 298 0074 7A68     		ldr	r2, [r7, #4]
 299 0076 1344     		add	r3, r3, r2
 300 0078 B3F90030 		ldrsh	r3, [r3]
 301 007c 9AB2     		uxth	r2, r3
 302              		.loc 1 91 29 discriminator 3
 303 007e BB89     		ldrh	r3, [r7, #12]
 304 0080 1344     		add	r3, r3, r2
 305 0082 99B2     		uxth	r1, r3
 306              		.loc 1 91 18 discriminator 3
 307 0084 7B69     		ldr	r3, [r7, #20]
 308 0086 5B00     		lsls	r3, r3, #1
 309 0088 7A68     		ldr	r2, [r7, #4]
 310 008a 1344     		add	r3, r3, r2
 311              		.loc 1 91 29 discriminator 3
 312 008c 0AB2     		sxth	r2, r1
 313              		.loc 1 91 22 discriminator 3
 314 008e 1A80     		strh	r2, [r3]	@ movhi
  88:ntt.c         ****                 t = fqmul(zeta, r[j + len]);
 315              		.loc 1 88 47 discriminator 3
 316 0090 7B69     		ldr	r3, [r7, #20]
 317 0092 0133     		adds	r3, r3, #1
 318 0094 7B61     		str	r3, [r7, #20]
 319              	.L6:
  88:ntt.c         ****                 t = fqmul(zeta, r[j + len]);
 320              		.loc 1 88 39 discriminator 1
 321 0096 BA69     		ldr	r2, [r7, #24]
 322 0098 FB69     		ldr	r3, [r7, #28]
 323 009a 1344     		add	r3, r3, r2
  88:ntt.c         ****                 t = fqmul(zeta, r[j + len]);
 324              		.loc 1 88 13 discriminator 1
 325 009c 7A69     		ldr	r2, [r7, #20]
 326 009e 9A42     		cmp	r2, r3
 327 00a0 C4D3     		bcc	.L7
  86:ntt.c         ****             zeta = PQCLEAN_KYBER512_CLEAN_zetas[k++];
 328              		.loc 1 86 44 discriminator 2
 329 00a2 7A69     		ldr	r2, [r7, #20]
 330 00a4 FB69     		ldr	r3, [r7, #28]
 331 00a6 1344     		add	r3, r3, r2
 332 00a8 BB61     		str	r3, [r7, #24]
 333              	.L5:
  86:ntt.c         ****             zeta = PQCLEAN_KYBER512_CLEAN_zetas[k++];
 334              		.loc 1 86 9 discriminator 1
 335 00aa BB69     		ldr	r3, [r7, #24]
 336 00ac FF2B     		cmp	r3, #255
 337 00ae B3D9     		bls	.L8
  85:ntt.c         ****         for (start = 0; start < 256; start = j + len) {
 338              		.loc 1 85 35 discriminator 2
 339 00b0 FB69     		ldr	r3, [r7, #28]
 340 00b2 5B08     		lsrs	r3, r3, #1
 341 00b4 FB61     		str	r3, [r7, #28]
 342              	.L4:
  85:ntt.c         ****         for (start = 0; start < 256; start = j + len) {
 343              		.loc 1 85 5 discriminator 1
 344 00b6 FB69     		ldr	r3, [r7, #28]
 345 00b8 012B     		cmp	r3, #1
 346 00ba AAD8     		bhi	.L9
  92:ntt.c         ****             }
  93:ntt.c         ****         }
  94:ntt.c         ****     }
  95:ntt.c         **** }
 347              		.loc 1 95 1
 348 00bc 00BF     		nop
 349 00be 00BF     		nop
 350 00c0 2037     		adds	r7, r7, #32
 351              	.LCFI8:
 352              		.cfi_def_cfa_offset 8
 353 00c2 BD46     		mov	sp, r7
 354              	.LCFI9:
 355              		.cfi_def_cfa_register 13
 356              		@ sp needed
 357 00c4 80BD     		pop	{r7, pc}
 358              	.L11:
 359 00c6 00BF     		.align	2
 360              	.L10:
 361 00c8 00000000 		.word	PQCLEAN_KYBER512_CLEAN_zetas
 362              		.cfi_endproc
 363              	.LFE1:
 365              		.section	.text.PQCLEAN_KYBER512_CLEAN_invntt,"ax",%progbits
 366              		.align	1
 367              		.global	PQCLEAN_KYBER512_CLEAN_invntt
 368              		.syntax unified
 369              		.thumb
 370              		.thumb_func
 371              		.fpu softvfp
 373              	PQCLEAN_KYBER512_CLEAN_invntt:
 374              	.LFB2:
  96:ntt.c         **** 
  97:ntt.c         **** /*************************************************
  98:ntt.c         **** * Name:        invntt_tomont
  99:ntt.c         **** *
 100:ntt.c         **** * Description: Inplace inverse number-theoretic transform in Rq and
 101:ntt.c         **** *              multiplication by Montgomery factor 2^16.
 102:ntt.c         **** *              Input is in bitreversed order, output is in standard order
 103:ntt.c         **** *
 104:ntt.c         **** * Arguments:   - int16_t r[256]: pointer to input/output vector of elements of Zq
 105:ntt.c         **** **************************************************/
 106:ntt.c         **** void PQCLEAN_KYBER512_CLEAN_invntt(int16_t r[256]) {
 375              		.loc 1 106 52
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 32
 378              		@ frame_needed = 1, uses_anonymous_args = 0
 379 0000 90B5     		push	{r4, r7, lr}
 380              	.LCFI10:
 381              		.cfi_def_cfa_offset 12
 382              		.cfi_offset 4, -12
 383              		.cfi_offset 7, -8
 384              		.cfi_offset 14, -4
 385 0002 89B0     		sub	sp, sp, #36
 386              	.LCFI11:
 387              		.cfi_def_cfa_offset 48
 388 0004 00AF     		add	r7, sp, #0
 389              	.LCFI12:
 390              		.cfi_def_cfa_register 7
 391 0006 7860     		str	r0, [r7, #4]
 107:ntt.c         ****     unsigned int start, len, j, k;
 108:ntt.c         ****     int16_t t, zeta;
 109:ntt.c         ****     const int16_t f = 1441; // mont^2/128
 392              		.loc 1 109 19
 393 0008 40F2A153 		movw	r3, #1441
 394 000c FB81     		strh	r3, [r7, #14]	@ movhi
 110:ntt.c         **** 
 111:ntt.c         ****     k = 127;
 395              		.loc 1 111 7
 396 000e 7F23     		movs	r3, #127
 397 0010 3B61     		str	r3, [r7, #16]
 112:ntt.c         ****     for (len = 2; len <= 128; len <<= 1) {
 398              		.loc 1 112 14
 399 0012 0223     		movs	r3, #2
 400 0014 BB61     		str	r3, [r7, #24]
 401              		.loc 1 112 5
 402 0016 64E0     		b	.L13
 403              	.L18:
 113:ntt.c         ****         for (start = 0; start < 256; start = j + len) {
 404              		.loc 1 113 20
 405 0018 0023     		movs	r3, #0
 406 001a FB61     		str	r3, [r7, #28]
 407              		.loc 1 113 9
 408 001c 5BE0     		b	.L14
 409              	.L17:
 114:ntt.c         ****             zeta = PQCLEAN_KYBER512_CLEAN_zetas[k--];
 410              		.loc 1 114 50
 411 001e 3B69     		ldr	r3, [r7, #16]
 412 0020 5A1E     		subs	r2, r3, #1
 413 0022 3A61     		str	r2, [r7, #16]
 414              		.loc 1 114 18
 415 0024 404A     		ldr	r2, .L21
 416 0026 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 417 002a BB81     		strh	r3, [r7, #12]	@ movhi
 115:ntt.c         ****             for (j = start; j < start + len; j++) {
 418              		.loc 1 115 20
 419 002c FB69     		ldr	r3, [r7, #28]
 420 002e 7B61     		str	r3, [r7, #20]
 421              		.loc 1 115 13
 422 0030 47E0     		b	.L15
 423              	.L16:
 116:ntt.c         ****                 t = r[j];
 424              		.loc 1 116 22 discriminator 3
 425 0032 7B69     		ldr	r3, [r7, #20]
 426 0034 5B00     		lsls	r3, r3, #1
 427 0036 7A68     		ldr	r2, [r7, #4]
 428 0038 1344     		add	r3, r3, r2
 429              		.loc 1 116 19 discriminator 3
 430 003a 1B88     		ldrh	r3, [r3]	@ movhi
 431 003c 7B81     		strh	r3, [r7, #10]	@ movhi
 117:ntt.c         ****                 r[j] = PQCLEAN_KYBER512_CLEAN_barrett_reduce(t + r[j + len]);
 432              		.loc 1 117 70 discriminator 3
 433 003e 7A69     		ldr	r2, [r7, #20]
 434 0040 BB69     		ldr	r3, [r7, #24]
 435 0042 1344     		add	r3, r3, r2
 436              		.loc 1 117 67 discriminator 3
 437 0044 5B00     		lsls	r3, r3, #1
 438 0046 7A68     		ldr	r2, [r7, #4]
 439 0048 1344     		add	r3, r3, r2
 440 004a B3F90030 		ldrsh	r3, [r3]
 441 004e 9AB2     		uxth	r2, r3
 442              		.loc 1 117 64 discriminator 3
 443 0050 7B89     		ldrh	r3, [r7, #10]
 444 0052 1344     		add	r3, r3, r2
 445 0054 9BB2     		uxth	r3, r3
 446              		.loc 1 117 24 discriminator 3
 447 0056 19B2     		sxth	r1, r3
 448              		.loc 1 117 18 discriminator 3
 449 0058 7B69     		ldr	r3, [r7, #20]
 450 005a 5B00     		lsls	r3, r3, #1
 451 005c 7A68     		ldr	r2, [r7, #4]
 452 005e D418     		adds	r4, r2, r3
 453              		.loc 1 117 24 discriminator 3
 454 0060 0846     		mov	r0, r1
 455 0062 FFF7FEFF 		bl	PQCLEAN_KYBER512_CLEAN_barrett_reduce
 456 0066 0346     		mov	r3, r0
 457              		.loc 1 117 22 discriminator 3
 458 0068 2380     		strh	r3, [r4]	@ movhi
 118:ntt.c         ****                 r[j + len] = r[j + len] - t;
 459              		.loc 1 118 34 discriminator 3
 460 006a 7A69     		ldr	r2, [r7, #20]
 461 006c BB69     		ldr	r3, [r7, #24]
 462 006e 1344     		add	r3, r3, r2
 463              		.loc 1 118 31 discriminator 3
 464 0070 5B00     		lsls	r3, r3, #1
 465 0072 7A68     		ldr	r2, [r7, #4]
 466 0074 1344     		add	r3, r3, r2
 467 0076 B3F90030 		ldrsh	r3, [r3]
 468 007a 9AB2     		uxth	r2, r3
 469              		.loc 1 118 41 discriminator 3
 470 007c 7B89     		ldrh	r3, [r7, #10]
 471 007e D31A     		subs	r3, r2, r3
 472 0080 99B2     		uxth	r1, r3
 473              		.loc 1 118 21 discriminator 3
 474 0082 7A69     		ldr	r2, [r7, #20]
 475 0084 BB69     		ldr	r3, [r7, #24]
 476 0086 1344     		add	r3, r3, r2
 477              		.loc 1 118 18 discriminator 3
 478 0088 5B00     		lsls	r3, r3, #1
 479 008a 7A68     		ldr	r2, [r7, #4]
 480 008c 1344     		add	r3, r3, r2
 481              		.loc 1 118 41 discriminator 3
 482 008e 0AB2     		sxth	r2, r1
 483              		.loc 1 118 28 discriminator 3
 484 0090 1A80     		strh	r2, [r3]	@ movhi
 119:ntt.c         ****                 r[j + len] = fqmul(zeta, r[j + len]);
 485              		.loc 1 119 46 discriminator 3
 486 0092 7A69     		ldr	r2, [r7, #20]
 487 0094 BB69     		ldr	r3, [r7, #24]
 488 0096 1344     		add	r3, r3, r2
 489              		.loc 1 119 43 discriminator 3
 490 0098 5B00     		lsls	r3, r3, #1
 491 009a 7A68     		ldr	r2, [r7, #4]
 492 009c 1344     		add	r3, r3, r2
 493              		.loc 1 119 30 discriminator 3
 494 009e B3F90010 		ldrsh	r1, [r3]
 495              		.loc 1 119 21 discriminator 3
 496 00a2 7A69     		ldr	r2, [r7, #20]
 497 00a4 BB69     		ldr	r3, [r7, #24]
 498 00a6 1344     		add	r3, r3, r2
 499              		.loc 1 119 18 discriminator 3
 500 00a8 5B00     		lsls	r3, r3, #1
 501 00aa 7A68     		ldr	r2, [r7, #4]
 502 00ac D418     		adds	r4, r2, r3
 503              		.loc 1 119 30 discriminator 3
 504 00ae B7F90C30 		ldrsh	r3, [r7, #12]
 505 00b2 1846     		mov	r0, r3
 506 00b4 FFF7FEFF 		bl	fqmul
 507 00b8 0346     		mov	r3, r0
 508              		.loc 1 119 28 discriminator 3
 509 00ba 2380     		strh	r3, [r4]	@ movhi
 115:ntt.c         ****                 t = r[j];
 510              		.loc 1 115 47 discriminator 3
 511 00bc 7B69     		ldr	r3, [r7, #20]
 512 00be 0133     		adds	r3, r3, #1
 513 00c0 7B61     		str	r3, [r7, #20]
 514              	.L15:
 115:ntt.c         ****                 t = r[j];
 515              		.loc 1 115 39 discriminator 1
 516 00c2 FA69     		ldr	r2, [r7, #28]
 517 00c4 BB69     		ldr	r3, [r7, #24]
 518 00c6 1344     		add	r3, r3, r2
 115:ntt.c         ****                 t = r[j];
 519              		.loc 1 115 13 discriminator 1
 520 00c8 7A69     		ldr	r2, [r7, #20]
 521 00ca 9A42     		cmp	r2, r3
 522 00cc B1D3     		bcc	.L16
 113:ntt.c         ****             zeta = PQCLEAN_KYBER512_CLEAN_zetas[k--];
 523              		.loc 1 113 44 discriminator 2
 524 00ce 7A69     		ldr	r2, [r7, #20]
 525 00d0 BB69     		ldr	r3, [r7, #24]
 526 00d2 1344     		add	r3, r3, r2
 527 00d4 FB61     		str	r3, [r7, #28]
 528              	.L14:
 113:ntt.c         ****             zeta = PQCLEAN_KYBER512_CLEAN_zetas[k--];
 529              		.loc 1 113 9 discriminator 1
 530 00d6 FB69     		ldr	r3, [r7, #28]
 531 00d8 FF2B     		cmp	r3, #255
 532 00da A0D9     		bls	.L17
 112:ntt.c         ****         for (start = 0; start < 256; start = j + len) {
 533              		.loc 1 112 35 discriminator 2
 534 00dc BB69     		ldr	r3, [r7, #24]
 535 00de 5B00     		lsls	r3, r3, #1
 536 00e0 BB61     		str	r3, [r7, #24]
 537              	.L13:
 112:ntt.c         ****         for (start = 0; start < 256; start = j + len) {
 538              		.loc 1 112 5 discriminator 1
 539 00e2 BB69     		ldr	r3, [r7, #24]
 540 00e4 802B     		cmp	r3, #128
 541 00e6 97D9     		bls	.L18
 120:ntt.c         ****             }
 121:ntt.c         ****         }
 122:ntt.c         ****     }
 123:ntt.c         **** 
 124:ntt.c         ****     for (j = 0; j < 256; j++) {
 542              		.loc 1 124 12
 543 00e8 0023     		movs	r3, #0
 544 00ea 7B61     		str	r3, [r7, #20]
 545              		.loc 1 124 5
 546 00ec 13E0     		b	.L19
 547              	.L20:
 125:ntt.c         ****         r[j] = fqmul(r[j], f);
 548              		.loc 1 125 23 discriminator 3
 549 00ee 7B69     		ldr	r3, [r7, #20]
 550 00f0 5B00     		lsls	r3, r3, #1
 551 00f2 7A68     		ldr	r2, [r7, #4]
 552 00f4 1344     		add	r3, r3, r2
 553              		.loc 1 125 16 discriminator 3
 554 00f6 B3F90000 		ldrsh	r0, [r3]
 555              		.loc 1 125 10 discriminator 3
 556 00fa 7B69     		ldr	r3, [r7, #20]
 557 00fc 5B00     		lsls	r3, r3, #1
 558 00fe 7A68     		ldr	r2, [r7, #4]
 559 0100 D418     		adds	r4, r2, r3
 560              		.loc 1 125 16 discriminator 3
 561 0102 B7F90E30 		ldrsh	r3, [r7, #14]
 562 0106 1946     		mov	r1, r3
 563 0108 FFF7FEFF 		bl	fqmul
 564 010c 0346     		mov	r3, r0
 565              		.loc 1 125 14 discriminator 3
 566 010e 2380     		strh	r3, [r4]	@ movhi
 124:ntt.c         ****         r[j] = fqmul(r[j], f);
 567              		.loc 1 124 27 discriminator 3
 568 0110 7B69     		ldr	r3, [r7, #20]
 569 0112 0133     		adds	r3, r3, #1
 570 0114 7B61     		str	r3, [r7, #20]
 571              	.L19:
 124:ntt.c         ****         r[j] = fqmul(r[j], f);
 572              		.loc 1 124 5 discriminator 1
 573 0116 7B69     		ldr	r3, [r7, #20]
 574 0118 FF2B     		cmp	r3, #255
 575 011a E8D9     		bls	.L20
 126:ntt.c         ****     }
 127:ntt.c         **** }
 576              		.loc 1 127 1
 577 011c 00BF     		nop
 578 011e 00BF     		nop
 579 0120 2437     		adds	r7, r7, #36
 580              	.LCFI13:
 581              		.cfi_def_cfa_offset 12
 582 0122 BD46     		mov	sp, r7
 583              	.LCFI14:
 584              		.cfi_def_cfa_register 13
 585              		@ sp needed
 586 0124 90BD     		pop	{r4, r7, pc}
 587              	.L22:
 588 0126 00BF     		.align	2
 589              	.L21:
 590 0128 00000000 		.word	PQCLEAN_KYBER512_CLEAN_zetas
 591              		.cfi_endproc
 592              	.LFE2:
 594              		.section	.text.PQCLEAN_KYBER512_CLEAN_basemul,"ax",%progbits
 595              		.align	1
 596              		.global	PQCLEAN_KYBER512_CLEAN_basemul
 597              		.syntax unified
 598              		.thumb
 599              		.thumb_func
 600              		.fpu softvfp
 602              	PQCLEAN_KYBER512_CLEAN_basemul:
 603              	.LFB3:
 128:ntt.c         **** 
 129:ntt.c         **** /*************************************************
 130:ntt.c         **** * Name:        PQCLEAN_KYBER512_CLEAN_basemul
 131:ntt.c         **** *
 132:ntt.c         **** * Description: Multiplication of polynomials in Zq[X]/(X^2-zeta)
 133:ntt.c         **** *              used for multiplication of elements in Rq in NTT domain
 134:ntt.c         **** *
 135:ntt.c         **** * Arguments:   - int16_t r[2]: pointer to the output polynomial
 136:ntt.c         **** *              - const int16_t a[2]: pointer to the first factor
 137:ntt.c         **** *              - const int16_t b[2]: pointer to the second factor
 138:ntt.c         **** *              - int16_t zeta: integer defining the reduction polynomial
 139:ntt.c         **** **************************************************/
 140:ntt.c         **** void PQCLEAN_KYBER512_CLEAN_basemul(int16_t r[2], const int16_t a[2], const int16_t b[2], int16_t z
 604              		.loc 1 140 105
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 16
 607              		@ frame_needed = 1, uses_anonymous_args = 0
 608 0000 90B5     		push	{r4, r7, lr}
 609              	.LCFI15:
 610              		.cfi_def_cfa_offset 12
 611              		.cfi_offset 4, -12
 612              		.cfi_offset 7, -8
 613              		.cfi_offset 14, -4
 614 0002 85B0     		sub	sp, sp, #20
 615              	.LCFI16:
 616              		.cfi_def_cfa_offset 32
 617 0004 00AF     		add	r7, sp, #0
 618              	.LCFI17:
 619              		.cfi_def_cfa_register 7
 620 0006 F860     		str	r0, [r7, #12]
 621 0008 B960     		str	r1, [r7, #8]
 622 000a 7A60     		str	r2, [r7, #4]
 623 000c 7B80     		strh	r3, [r7, #2]	@ movhi
 141:ntt.c         ****     r[0]  = fqmul(a[1], b[1]);
 624              		.loc 1 141 20
 625 000e BB68     		ldr	r3, [r7, #8]
 626 0010 0233     		adds	r3, r3, #2
 627              		.loc 1 141 13
 628 0012 B3F90020 		ldrsh	r2, [r3]
 629              		.loc 1 141 26
 630 0016 7B68     		ldr	r3, [r7, #4]
 631 0018 0233     		adds	r3, r3, #2
 632              		.loc 1 141 13
 633 001a B3F90030 		ldrsh	r3, [r3]
 634 001e 1946     		mov	r1, r3
 635 0020 1046     		mov	r0, r2
 636 0022 FFF7FEFF 		bl	fqmul
 637 0026 0346     		mov	r3, r0
 638 0028 1A46     		mov	r2, r3
 639              		.loc 1 141 11
 640 002a FB68     		ldr	r3, [r7, #12]
 641 002c 1A80     		strh	r2, [r3]	@ movhi
 142:ntt.c         ****     r[0]  = fqmul(r[0], zeta);
 642              		.loc 1 142 13
 643 002e FB68     		ldr	r3, [r7, #12]
 644 0030 B3F90030 		ldrsh	r3, [r3]
 645 0034 B7F90220 		ldrsh	r2, [r7, #2]
 646 0038 1146     		mov	r1, r2
 647 003a 1846     		mov	r0, r3
 648 003c FFF7FEFF 		bl	fqmul
 649 0040 0346     		mov	r3, r0
 650 0042 1A46     		mov	r2, r3
 651              		.loc 1 142 11
 652 0044 FB68     		ldr	r3, [r7, #12]
 653 0046 1A80     		strh	r2, [r3]	@ movhi
 143:ntt.c         ****     r[0] += fqmul(a[0], b[0]);
 654              		.loc 1 143 13
 655 0048 BB68     		ldr	r3, [r7, #8]
 656 004a B3F90020 		ldrsh	r2, [r3]
 657 004e 7B68     		ldr	r3, [r7, #4]
 658 0050 B3F90030 		ldrsh	r3, [r3]
 659 0054 1946     		mov	r1, r3
 660 0056 1046     		mov	r0, r2
 661 0058 FFF7FEFF 		bl	fqmul
 662 005c 0346     		mov	r3, r0
 663 005e 1946     		mov	r1, r3
 664              		.loc 1 143 10
 665 0060 FB68     		ldr	r3, [r7, #12]
 666 0062 B3F90030 		ldrsh	r3, [r3]
 667 0066 9AB2     		uxth	r2, r3
 668              		.loc 1 143 13
 669 0068 8BB2     		uxth	r3, r1
 670              		.loc 1 143 10
 671 006a 1344     		add	r3, r3, r2
 672 006c 9BB2     		uxth	r3, r3
 673 006e 1AB2     		sxth	r2, r3
 674 0070 FB68     		ldr	r3, [r7, #12]
 675 0072 1A80     		strh	r2, [r3]	@ movhi
 144:ntt.c         ****     r[1]  = fqmul(a[0], b[1]);
 676              		.loc 1 144 13
 677 0074 BB68     		ldr	r3, [r7, #8]
 678 0076 B3F90020 		ldrsh	r2, [r3]
 679              		.loc 1 144 26
 680 007a 7B68     		ldr	r3, [r7, #4]
 681 007c 0233     		adds	r3, r3, #2
 682              		.loc 1 144 13
 683 007e B3F90010 		ldrsh	r1, [r3]
 684              		.loc 1 144 6
 685 0082 FB68     		ldr	r3, [r7, #12]
 686 0084 9C1C     		adds	r4, r3, #2
 687              		.loc 1 144 13
 688 0086 1046     		mov	r0, r2
 689 0088 FFF7FEFF 		bl	fqmul
 690 008c 0346     		mov	r3, r0
 691              		.loc 1 144 11
 692 008e 2380     		strh	r3, [r4]	@ movhi
 145:ntt.c         ****     r[1] += fqmul(a[1], b[0]);
 693              		.loc 1 145 20
 694 0090 BB68     		ldr	r3, [r7, #8]
 695 0092 0233     		adds	r3, r3, #2
 696              		.loc 1 145 13
 697 0094 B3F90020 		ldrsh	r2, [r3]
 698 0098 7B68     		ldr	r3, [r7, #4]
 699 009a B3F90030 		ldrsh	r3, [r3]
 700 009e 1946     		mov	r1, r3
 701 00a0 1046     		mov	r0, r2
 702 00a2 FFF7FEFF 		bl	fqmul
 703 00a6 0346     		mov	r3, r0
 704 00a8 1946     		mov	r1, r3
 705              		.loc 1 145 10
 706 00aa FB68     		ldr	r3, [r7, #12]
 707 00ac 0233     		adds	r3, r3, #2
 708 00ae B3F90030 		ldrsh	r3, [r3]
 709 00b2 9AB2     		uxth	r2, r3
 710              		.loc 1 145 13
 711 00b4 8BB2     		uxth	r3, r1
 712              		.loc 1 145 10
 713 00b6 1344     		add	r3, r3, r2
 714 00b8 9AB2     		uxth	r2, r3
 715 00ba FB68     		ldr	r3, [r7, #12]
 716 00bc 0233     		adds	r3, r3, #2
 717 00be 12B2     		sxth	r2, r2
 718 00c0 1A80     		strh	r2, [r3]	@ movhi
 146:ntt.c         **** }
 719              		.loc 1 146 1
 720 00c2 00BF     		nop
 721 00c4 1437     		adds	r7, r7, #20
 722              	.LCFI18:
 723              		.cfi_def_cfa_offset 12
 724 00c6 BD46     		mov	sp, r7
 725              	.LCFI19:
 726              		.cfi_def_cfa_register 13
 727              		@ sp needed
 728 00c8 90BD     		pop	{r4, r7, pc}
 729              		.cfi_endproc
 730              	.LFE3:
 732              		.text
 733              	.Letext0:
 734              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 735              		.file 3 "ntt.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 ntt.c
     /tmp/ccWpU7Vk.s:20     .rodata:0000000000000000 PQCLEAN_KYBER512_CLEAN_zetas
     /tmp/ccWpU7Vk.s:17     .rodata:0000000000000000 $d
     /tmp/ccWpU7Vk.s:150    .text.fqmul:0000000000000000 $t
     /tmp/ccWpU7Vk.s:157    .text.fqmul:0000000000000000 fqmul
     /tmp/ccWpU7Vk.s:202    .text.PQCLEAN_KYBER512_CLEAN_ntt:0000000000000000 $t
     /tmp/ccWpU7Vk.s:209    .text.PQCLEAN_KYBER512_CLEAN_ntt:0000000000000000 PQCLEAN_KYBER512_CLEAN_ntt
     /tmp/ccWpU7Vk.s:361    .text.PQCLEAN_KYBER512_CLEAN_ntt:00000000000000c8 $d
     /tmp/ccWpU7Vk.s:366    .text.PQCLEAN_KYBER512_CLEAN_invntt:0000000000000000 $t
     /tmp/ccWpU7Vk.s:373    .text.PQCLEAN_KYBER512_CLEAN_invntt:0000000000000000 PQCLEAN_KYBER512_CLEAN_invntt
     /tmp/ccWpU7Vk.s:590    .text.PQCLEAN_KYBER512_CLEAN_invntt:0000000000000128 $d
     /tmp/ccWpU7Vk.s:595    .text.PQCLEAN_KYBER512_CLEAN_basemul:0000000000000000 $t
     /tmp/ccWpU7Vk.s:602    .text.PQCLEAN_KYBER512_CLEAN_basemul:0000000000000000 PQCLEAN_KYBER512_CLEAN_basemul

UNDEFINED SYMBOLS
PQCLEAN_KYBER512_CLEAN_montgomery_reduce
PQCLEAN_KYBER512_CLEAN_barrett_reduce
